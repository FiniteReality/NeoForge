--- a/net/minecraft/client/renderer/PostPass.java
+++ b/net/minecraft/client/renderer/PostPass.java
@@ -122,7 +_,54 @@
     }
 
     @OnlyIn(Dist.CLIENT)
-    public static record TargetInput(String samplerName, ResourceLocation targetId, boolean depthBuffer, boolean bilinear) implements PostPass.Input {
+    public static record TargetInput(String samplerName, ResourceLocation targetId, BufferType bufferType, boolean bilinear) implements PostPass.Input {
+        public enum BufferType {
+            NONE(false, false),
+            DEPTH_ONLY(true, false),
+            STENCIL_ONLY(false, true),
+            DEPTH_STENCIL(true, true);
+
+            private final boolean depth;
+            private final boolean stencil;
+
+            BufferType(boolean depth, boolean stencil) {
+                this.depth = depth;
+                this.stencil = stencil;
+            }
+
+            public boolean hasDepth() {
+                return this.depth;
+            }
+
+            public boolean hasStencil() {
+                return this.stencil;
+            }
+
+            public static BufferType from(boolean useDepth, boolean useStencil) {
+                if (useDepth && useStencil) {
+                    return DEPTH_STENCIL;
+                } else if (useDepth) {
+                    return DEPTH_ONLY;
+                } else if (useStencil) {
+                    return STENCIL_ONLY;
+                } else {
+                    return NONE;
+                }
+            }
+        }
+
+        public TargetInput(String samplerName, ResourceLocation targetId, boolean depthBuffer, boolean bilinear) {
+            this(samplerName, targetId, depthBuffer ? BufferType.DEPTH_ONLY : BufferType.NONE, bilinear);
+        }
+
+        public boolean depthBuffer() {
+            return bufferType.hasDepth();
+        }
+
+        public boolean stencilBuffer() {
+            return bufferType.hasStencil();
+        }
+
         private ResourceHandle<RenderTarget> getHandle(Map<ResourceLocation, ResourceHandle<RenderTarget>> p_364534_) {
             ResourceHandle<RenderTarget> resourcehandle = p_364534_.get(this.targetId);
             if (resourcehandle == null) {
@@ -142,7 +_,13 @@
             ResourceHandle<RenderTarget> resourcehandle = this.getHandle(p_361239_);
             RenderTarget rendertarget = resourcehandle.get();
             rendertarget.setFilterMode(this.bilinear ? 9729 : 9728);
-            p_366564_.bindSampler(this.samplerName + "Sampler", this.depthBuffer ? rendertarget.getDepthTextureId() : rendertarget.getColorTextureId());
+            if (this.depthBuffer())
+                p_366564_.bindSampler(this.samplerName + "Sampler", rendertarget.getDepthTextureId());
+            // If stencil is specified
+            else if (this.stencilBuffer())
+                p_366564_.bindSampler(this.samplerName + "Sampler", rendertarget.getStencilTextureId());
+            else
+                p_366564_.bindSampler(this.samplerName + "Sampler", rendertarget.getColorTextureId());
             p_366564_.safeGetUniform(this.samplerName + "Size").set((float)rendertarget.width, (float)rendertarget.height);
         }
 
